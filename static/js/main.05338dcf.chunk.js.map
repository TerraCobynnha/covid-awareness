{"version":3,"sources":["images/covid1.png","images/covid2.png","images/covid3.png","images/covid4.png","images/covid5.jpg","images/covid6.png","images/covid7.png","images/covid8.png","images/poster.jpg","videos/426ExamEdit.mp4","images/nose1.png","images/nose2.png","components/Home.jsx","components/CardSet.jsx","components/Cards.jsx","components/Facts.jsx","components/Video.jsx","components/StaySafe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","className","CardSet","list","Row","map","item","Col","md","alt","src","Cards","useState","Covid1","Covid2","Covid3","Covid4","Facts","Covid5","Covid6","Covid7","Covid8","Video","controls","poster","Poster","style","width","objectFit","borderRadius","videoLink","StaySafe","Nose1","Nose2","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,kJCe5BC,EAZF,WACX,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,UAAU,QACb,wBAAIA,UAAU,yBAAd,sBACA,wBAAIA,UAAU,6BAAd,8BACA,wBAAIA,UAAU,8BAAd,0B,2FCQOC,EAdC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,kBAACC,EAAA,EAAD,KACGD,EAAKE,KAAI,SAACC,GACT,OACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAKC,IAAI,YAAYC,IAAKJ,EAAML,UAAU,qBCiBvCU,EAZD,WAAO,IAAD,EACHC,mBAAS,CAACC,IAAQC,IAAQC,IAAQC,MAA1Cb,EADW,oBAElB,OACE,yBAAKF,UAAU,SACb,kBAACD,EAAA,EAAD,KACE,wBAAIC,UAAU,eAAd,wBACA,kBAAC,EAAD,CAASE,KAAMA,O,oECMRc,EAZD,WAAO,IAAD,EACHL,mBAAS,CAACM,IAAQC,IAAQC,IAAQC,MAA1ClB,EADW,oBAElB,OACE,yBAAKF,UAAU,eACb,kBAACD,EAAA,EAAD,KACE,wBAAIC,UAAU,0BAAd,kBACA,kBAAC,EAAD,CAASE,KAAMA,O,kCCaRmB,EAxBD,WACZ,OACE,yBAAKrB,UAAU,eACb,kBAACD,EAAA,EAAD,KACE,wBAAIC,UAAU,eAAd,mBACA,kBAACG,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,2BACEgB,UAAQ,EACRC,OAAQC,IACRC,MAAO,CACLC,MAAO,OACPC,UAAW,QACXC,aAAc,QAEhBnB,IAAKoB,W,kCCMJC,EArBE,WACf,OACE,yBAAK9B,UAAU,cACb,kBAACD,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKC,GAAG,IAAIP,UAAU,kBACpB,yBAAKQ,IAAI,YAAYC,IAAKsB,IAAO/B,UAAU,gBAE7C,kBAACM,EAAA,EAAD,CAAKC,GAAG,IAAIP,UAAU,kBACpB,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAd,oBAEF,kBAACM,EAAA,EAAD,CAAKC,GAAG,IAAIP,UAAU,kBACpB,yBAAKQ,IAAI,YAAYC,IAAKuB,IAAOhC,UAAU,oBCFxCiC,MAZf,WACE,OACE,yBAAKjC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHckC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.05338dcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid1.ed674b5d.png\";","module.exports = __webpack_public_path__ + \"static/media/covid2.e6614787.png\";","module.exports = __webpack_public_path__ + \"static/media/covid3.6e9f2a96.png\";","module.exports = __webpack_public_path__ + \"static/media/covid4.4791b8ca.png\";","module.exports = __webpack_public_path__ + \"static/media/covid5.91d3854c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/covid6.0de42b57.png\";","module.exports = __webpack_public_path__ + \"static/media/covid7.56811569.png\";","module.exports = __webpack_public_path__ + \"static/media/covid8.faed9de7.png\";","module.exports = __webpack_public_path__ + \"static/media/poster.a2538939.jpg\";","module.exports = __webpack_public_path__ + \"static/media/426ExamEdit.28279117.mp4\";","module.exports = __webpack_public_path__ + \"static/media/nose1.5b94e999.png\";","module.exports = __webpack_public_path__ + \"static/media/nose2.e9f137c1.png\";","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <div className=\"Home\">\r\n        <h1 className=\"home-title text-white\">COVID-19 AWARENESS</h1>\r\n        <h1 className=\"home-sub-title text-white\">FOR THE PEOPLE OF WALEWALE</h1>\r\n        <h1 className=\"home-sub-title course-code\">CSCD 426 - 10629392</h1>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst CardSet = ({ list }) => {\r\n  return (\r\n    <Row>\r\n      {list.map((item) => {\r\n        return (\r\n          <Col md=\"6\">\r\n            <img alt=\"covid art\" src={item} className=\"card-image\" />\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CardSet;\r\n","import React, { useState } from 'react';\r\n\r\n// Reactstrap\r\nimport { Container } from 'reactstrap';\r\n\r\n// Personal files\r\nimport Covid1 from '../images/covid1.png';\r\nimport Covid2 from '../images/covid2.png';\r\nimport Covid3 from '../images/covid3.png';\r\nimport Covid4 from '../images/covid4.png';\r\n\r\n// Components\r\nimport CardSet from './CardSet';\r\n\r\nconst Cards = () => {\r\n  const [list] = useState([Covid1, Covid2, Covid3, Covid4]);\r\n  return (\r\n    <div className=\"Cards\">\r\n      <Container>\r\n        <h1 className=\"cards-title\">COVID-19 PRECAUTIONS</h1>\r\n        <CardSet list={list} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState } from 'react';\r\n\r\n// Reactstrap\r\nimport { Container } from 'reactstrap';\r\n\r\n// Personal files\r\nimport Covid5 from '../images/covid5.jpg';\r\nimport Covid6 from '../images/covid6.png';\r\nimport Covid7 from '../images/covid7.png';\r\nimport Covid8 from '../images/covid8.png';\r\n\r\n// Components\r\nimport CardSet from './CardSet';\r\n\r\nconst Facts = () => {\r\n  const [list] = useState([Covid5, Covid6, Covid7, Covid8]);\r\n  return (\r\n    <div className=\"Cards Facts\">\r\n      <Container>\r\n        <h1 className=\"cards-title text-light\">COVID-19 FACTS</h1>\r\n        <CardSet list={list} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Facts;\r\n","import React from 'react';\r\n\r\n// Reactstrap\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n// Personal files\r\nimport Poster from '../images/poster.jpg';\r\nimport videoLink from './../videos/426ExamEdit.mp4';\r\n\r\nconst Video = () => {\r\n  return (\r\n    <div className=\"Cards Video\">\r\n      <Container>\r\n        <h1 className=\"cards-title\">A VIDEO SUMMARY</h1>\r\n        <Row>\r\n          <Col>\r\n            <video\r\n              controls\r\n              poster={Poster}\r\n              style={{\r\n                width: '100%',\r\n                objectFit: 'cover',\r\n                borderRadius: '13px',\r\n              }}\r\n              src={videoLink}\r\n            ></video>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React from 'react';\r\n\r\n// Reactstrap\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n// Personal files\r\nimport Nose1 from '../images/nose1.png';\r\nimport Nose2 from '../images/nose2.png';\r\n\r\nconst StaySafe = () => {\r\n  return (\r\n    <div className=\"Cards Safe\">\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"4\" className=\"safe-image-col\">\r\n            <img alt=\"covid art\" src={Nose1} className=\"safe-image\" />\r\n          </Col>\r\n          <Col md=\"4\" className=\"safe-image-col\">\r\n            <h1 className=\"safe-text\">STAY SAFE</h1>\r\n            <h3 className=\"safe-text\">Wear your mask!</h3>\r\n          </Col>\r\n          <Col md=\"4\" className=\"safe-image-col\">\r\n            <img alt=\"covid art\" src={Nose2} className=\"safe-image\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaySafe;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Cards from './components/Cards';\r\nimport Facts from './components/Facts';\r\nimport Video from './components/Video';\r\nimport StaySafe from './components/StaySafe';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n      <Cards />\r\n      <Facts />\r\n      <Video />\r\n      <StaySafe />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}